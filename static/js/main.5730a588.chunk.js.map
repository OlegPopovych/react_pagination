{"version":3,"sources":["utils.ts","App.tsx","components/Pagination/Pagination.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Selects","Pagination","total","useSearchParams","searchParams","setSearchParams","currentPage","Number","get","perPage","totalPages","Math","ceil","pageButtons","map","className","cn","href","onClick","set","String","onPrevNextHandler","event","current","currentTarget","getAttribute","onChangePage","disabled","items","title","id","App","selectedPage","itemsOnPage","elements","startIndex","length","splice","pagination","useEffect","Object","values","includes","firstElement","lastElement","value","onChange","e","target","page","Three","Five","Ten","Twenty","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5730a588.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ninterface Element {\n  title: string;\n  id: number;\n}\nconst items: Element[] = getNumbers(1, 42)\n  .map(n => {\n    return {\n      title: `Item ${n}`,\n      id: n,\n    };\n  });\n\ninterface PagesOnPage<O> {\n  totalPages: number;\n  currentPage: O[];\n}\n\nenum Selects {\n  Three = '3',\n  Five = '5',\n  Ten = '10',\n  Twenty = '20',\n}\n\nconst pagination = <T extends unknown>(\n  elements: T[],\n  itemsOnPage: number,\n  selectedPage: number,\n): PagesOnPage<T> => {\n  const totalPages = Math.ceil(elements.length / itemsOnPage);\n  const startIndex = itemsOnPage * (selectedPage - 1);\n\n  const currentPage = [...elements].splice(startIndex, itemsOnPage);\n\n  const result: PagesOnPage<T> = {\n    totalPages,\n    currentPage,\n  };\n\n  return result;\n};\n\nexport const App: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const selectedPage = Number(searchParams.get('page'));\n  const itemsOnPage = Number(searchParams.get('perPage'));\n\n  const { currentPage, totalPages } = pagination(\n    items, itemsOnPage, selectedPage,\n  );\n\n  useEffect(() => {\n    if (searchParams.get('page') === null\n      || searchParams.get('perPage') === null\n    ) {\n      searchParams.set('page', '1');\n      searchParams.set('perPage', '5');\n      setSearchParams(searchParams);\n    }\n  }, [searchParams, setSearchParams]);\n\n  useEffect(() => {\n    if (searchParams.get('page') !== null\n      && searchParams.get('perPage') !== null\n    ) {\n      if (selectedPage < 0 || selectedPage > totalPages\n        || !Object.values(Object(Selects)).includes(String(itemsOnPage))) {\n        searchParams.set('page', '1');\n        searchParams.set('perPage', '5');\n        setSearchParams(searchParams);\n      }\n    }\n  }, [searchParams, setSearchParams]);\n\n  const firstElement = currentPage[0]?.id || 0;\n  const lastElement = currentPage[currentPage.length - 1]?.id || 0;\n\n  useEffect(() => {\n    searchParams.set('page', '1');\n    setSearchParams(searchParams);\n  }, [itemsOnPage]);\n\n  const onPerPageChange = (perPage: number) => {\n    setSearchParams({\n      page: String(selectedPage),\n      perPage: String(perPage),\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${firstElement} - ${lastElement} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsOnPage}\n            onChange={e => onPerPageChange(Number(e.target.value))}\n          >\n            <option value={Selects.Three}>{Selects.Three}</option>\n            <option value={Selects.Five}>{Selects.Five}</option>\n            <option value={Selects.Ten}>{Selects.Ten}</option>\n            <option value={Selects.Twenty}>{Selects.Twenty}</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      {(selectedPage && itemsOnPage)\n      && (\n        <Pagination\n          total={items.length}\n        />\n      )}\n      <ul>\n        {currentPage.map(({ title, id }) => (\n          <li data-cy=\"item\" key={id}>{title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const currentPage = Number(searchParams.get('page'));\n  const perPage = Number(searchParams.get('perPage'));\n\n  const totalPages = Math.ceil(total / perPage);\n  const pageButtons = getNumbers(1, totalPages)\n    .map(n => (\n      <li\n        key={n}\n        className={cn(\n          'page-item',\n          // eslint-disable-next-line quote-props\n          { 'active': n === currentPage },\n        )}\n      >\n        <a\n          data-cy=\"pageLink\"\n          className=\"page-link\"\n          href={`#${n}`}\n          onClick={() => {\n            if (n !== currentPage) {\n              searchParams.set('page', String(n));\n              setSearchParams(searchParams);\n            }\n          }}\n        >\n          {n}\n        </a>\n      </li>\n    ));\n\n  function onChangePage(current: string) {\n    switch (current) {\n      case 'prevLink':\n        if (currentPage !== 1) {\n          searchParams.set('page', String(currentPage - 1));\n          setSearchParams(searchParams);\n        }\n\n        break;\n\n      case 'nextLink':\n        if (currentPage !== totalPages) {\n          searchParams.set('page', String(currentPage + 1));\n          setSearchParams(searchParams);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const onPrevNextHandler = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const current = event.currentTarget.getAttribute('data-cy');\n\n    if (current) {\n      onChangePage(current);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className={cn('page-link')}\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={(event) => onPrevNextHandler(event)}\n          >\n            «\n          </a>\n        </li>\n        {pageButtons}\n        <li\n          className={cn(\n            'page-item',\n            { disabled: currentPage === totalPages },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === totalPages}\n            onClick={(event) => onPrevNextHandler(event)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}