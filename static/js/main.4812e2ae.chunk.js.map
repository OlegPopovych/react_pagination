{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pageButtons","map","className","cn","href","onClick","onPrevNextHandler","event","currentTarget","getAttribute","disabled","items","title","id","App","useState","itemsOnPage","setItemsOnPage","selectedPage","setSelectedPage","elements","startIndex","length","splice","pagination","firstElement","lastElement","useEffect","value","onChange","e","Number","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4812e2ae.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pageButtons = getNumbers(1, totalPages)\n    .map(n => (\n      <li\n        key={n}\n        className={cn(\n          'page-item',\n          // eslint-disable-next-line quote-props\n          { 'active': n === currentPage },\n        )}\n      >\n        <a\n          data-cy=\"pageLink\"\n          className=\"page-link\"\n          href={`#${n}`}\n          onClick={() => onPageChange(n)}\n        >\n          {n}\n        </a>\n      </li>\n    ));\n\n  const onPrevNextHandler = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const current = event.currentTarget.getAttribute('data-cy');\n\n    switch (current) {\n      case 'prevLink':\n        if (currentPage !== 1) {\n          onPageChange(currentPage - 1);\n        }\n\n        break;\n      case 'nextLink':\n        if (currentPage !== totalPages) {\n          onPageChange(currentPage + 1);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className={cn('page-link')}\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={(event) => onPrevNextHandler(event)}\n          >\n            «\n          </a>\n        </li>\n        {pageButtons}\n        <li\n          className={cn(\n            'page-item',\n            { disabled: currentPage === totalPages },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === totalPages}\n            onClick={(event) => onPrevNextHandler(event)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst items: { title: string, id: number }[] = getNumbers(1, 42)\n  .map(n => {\n    return {\n      title: `Item ${n}`,\n      id: n,\n    };\n  });\n\ninterface PagesOnPage<O> {\n  totalPages: number;\n  currentPage: O[];\n}\n\nconst pagination = <T extends unknown>(\n  elements: T[],\n  itemsOnPage: number,\n  selectedPage: number,\n): PagesOnPage<T> => {\n  const totalPages = Math.ceil(elements.length / itemsOnPage);\n  const startIndex = 0 + (itemsOnPage * (selectedPage - 1));\n\n  const currentPage = [...elements].splice(startIndex, itemsOnPage);\n\n  const result: PagesOnPage<T> = {\n    totalPages,\n    currentPage,\n  };\n\n  return result;\n};\n\nexport const App: React.FC = () => {\n  const [itemsOnPage, setItemsOnPage] = useState<number>(5);\n  const [selectedPage, setSelectedPage] = useState<number>(1);\n\n  const { currentPage } = pagination(\n    items, itemsOnPage, selectedPage,\n  );\n\n  const firstElement = currentPage[0]?.id || 0;\n  const lastElement = currentPage[currentPage.length - 1]?.id || 0;\n\n  useEffect(() => {\n    setSelectedPage(1);\n  }, [itemsOnPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${firstElement} - ${lastElement} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsOnPage}\n            onChange={e => setItemsOnPage(Number(e.target.value))}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        currentPage={selectedPage}\n        perPage={itemsOnPage}\n        onPageChange={(page: number): void => setSelectedPage(page)}\n      />\n\n      <ul>\n        {currentPage.map(({ title, id }) => (\n          <li data-cy=\"item\" key={id}>{title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}